using System;
namespace a4_inter {

    public interface Shape {

        /*string name()
        {
            return this.GetType().Name;
            // Console.WriteLine(this.GetType().Name);

        }*/

        double getPerimeter();
        double getArea();
        void Print();
    }



}

namespace A4
{
    using a4_inter;
    using System;
   // using A4_ext;
     public partial class EmptyClass : Shape
    {

        double r;
        public EmptyClass()
        {
            this.r = 0.0;
        }

        public EmptyClass(double rad) {
            this.r = rad;

        }

        // public static partial EmptyClass Parse(string s) {

        //    string[] val = s.Split(",");
        //    EmptyClass c = new EmptyClass(Convert.ToDouble(val[1]));
        //    return c;

        //}
        public override string ToString()
        {
            EmptyClass e = new EmptyClass();
            return "Circle , " + r;

        }
        public double getPerimeter()
        {
            double per=2 * 3.14 * r;
            //Console.WriteLine($"Circle Perimiter is: {per}");
            return per;

        }
        public double getArea()
        {
           //Console.WriteLine("Circle Area is: " (3.14 * r * r));
            return 3.14 * r * r;
        }
        public void Print()
        {
            Console.WriteLine("Circle Print method");
        }

        //public static void Print(this Shape s)
        //{

        //    Console.WriteLine(s.ToString());

        //}



    } //end of emptyClass

    public partial class Rectangle : Shape
    {

        double s1;
        double s2;

        //Default constructor
        public Rectangle()
        {
            this.s1 = 0.0;
            this.s2 = 0.0;

        }

        //param constructor
        public Rectangle(double side1, double side2)
        {
            this.s1 = side1;
            this.s2 = side2;
        }


        public double getPerimeter()
        {
            //Console.WriteLine("Rectangle Perimiter is: ", (s1 + s2));
            return s1 + s2;

        }
        public double getArea()
        {
            //Console.WriteLine("Rectangle Area is: ", (s1 * s2));
            return s1 * s2;
        }

        public override string ToString()
        {
            Shape r = new Rectangle();
            // string n = r.name();

            return  "Rectangle , " + s1 + ", " + s2;

        }
        public void Print()
        {
            Console.WriteLine("Rectangle Print method");
        }

        //public static Rectangle Parse(string s)
        //{

        //    string[] val = s.Split(",");
        //    Rectangle r = new Rectangle(Convert.ToDouble(val[1]), Convert.ToDouble(val[2]));
        //    return r;

        //}

    }//end of rectangle class




    public class m {

        static void Main(string[] args) {

            EmptyClass e = new EmptyClass();
            e = EmptyClass.Parse("Circle,1");
            Console.WriteLine(e.ToString());

            Rectangle r = new Rectangle();
            r = Rectangle.Parse("Rectangle, 3,2");
            Console.WriteLine(r.ToString());

            EmptyClass e1 = new EmptyClass();
            Console.WriteLine(e1.ToString());


            Rectangle r1 = new Rectangle();
            Console.WriteLine(r1.ToString());

            EmptyClass e2 = new EmptyClass(3.4);
           Console.WriteLine($"Area is : {e2.getArea()}" );
           Console.WriteLine($"Perimeter is : {e2.getArea()}");


        }



    }

} //end of namespace a4
