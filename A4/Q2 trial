
namespace a4_interface
{
    using System;
    public interface Shape
    {
        
        public string name()
        {
            return this.GetType().Name;
            // Console.WriteLine(this.GetType().Name);

        }
        void getPerimeter();
        void getArea();
        void Print();



    } //end interface

  
}



namespace a4_classes {
    using a4_interface;
    using System;

    public class Rectangle : Shape
    {

        double s1;
        double s2;

        //Default constructor
        public Rectangle()
        {
            this.s1 = 0.0;
            this.s2 = 0.0;

        }

        //param constructor
        public Rectangle(double side1, double side2)
        {
            this.s1 = side1;
            this.s2 = side2;
        }


        public void getPerimeter()
        {
            Console.WriteLine("Rectangle Perimiter is: ", (s1 + s2));

        }
        public void getArea()
        {
            Console.WriteLine("Rectangle Area is: ", (s1 * s2));
        }

        public override string ToString()
        {
            Shape r = new Rectangle();
            // string n = r.name();

            return r.name() + ", " + s1 + ", " + s2;

        }
        public void Print()
        {
            Console.WriteLine("Rectangle Print method");
        }

        public static Rectangle Parse(string s)
        {

            string[] val = s.Split(",");
            Rectangle r = new Rectangle(Convert.ToDouble(val[1]), Convert.ToDouble(val[2]));
            return r;

        }
    }//end of Rectangle

    public partial class Circle : Shape
    {

        double r;

        //default constructor

        public Circle()
        {
            this.r = 0.0;
        }

        //param constructor
        public Circle(double rad)
        {
            this.r = rad;
        }

        public void getPerimeter()
        {
            Console.WriteLine("Circle Perimiter is: ", (2 * Math.PI * r));

        }
        public void getArea()
        {
            Console.WriteLine("Circle Area is: ", (Math.PI * r * r));
        }


        public override string ToString()
        {
            Shape r = new Circle();
            return r.name() + ", " + r;

        }

        public void Print()
        {
            Console.WriteLine("Circle Print method");
        }
    

    } //end of Circle

    public class TestingMain {
        static void Main(string[] args) {

            Rectangle r = new Rectangle();

            r = Rectangle.Parse("Rectangle,3.1,2.1");

            Console.WriteLine(r);

            Circle c = new Circle();
            c=c.Parse("Circle, 2");
            Console.WriteLine(c);

          




        }



    }




}
