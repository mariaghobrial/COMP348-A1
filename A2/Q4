(defun removeDupl (list)
    (cond 
        ((null list) list)
        ((member (car list) (cdr list))(removeDupl (cdr list)))
        (t (cons (car list) (removeDupl (cdr list))))
    )
)

(defun flatten-nums-nodup(list)
   (cond 
       ((null list) nil)
       ((atom (car list))
           (cond 
               ((not(numberp (car list)))(removeDupl (flatten-nums-nodup (cdr list))))
               (t (removeDupl (cons (car list) (flatten-nums-nodup (cdr list)))))
           )
       )
       (t (removeDupl (append (flatten-nums-nodup (car list)) (flatten-nums-nodup(cdr list)))))
   )
)

(print (flatten-nums-nodup '(1 2 (3 1) (a 2.5) (2 4.5) ((1 2)))))
